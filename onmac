#!/bin/bash

# Param 1:subnet

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

# Check for root
if (( $EUID != 0 )); then
  printf "${RED}Please run as root/sudo${NC}\n"
  exit
fi

# Default ARG1 if not specified
ARG1=${1:-192.168.0.0/24}

# Config directory
confdir="/etc/onmac"

# Scan network with params
noutput="$(nmap -sP $ARG1 | tr '\n' ' ' | cut -c 2-)"

# Get ip and mac from output and list of known macs from config
iplist="$(echo "${noutput}" | grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}')"
maclist="$(echo "${noutput}" | grep -E -o '[[:xdigit:]]{2}(:[[:xdigit:]]{2}){5}')"
knownlist="$(cat "${confdir}"/knownmacs.conf)"

# Turn lists into arrays
macarray=( ${maclist} )
iparray=( ${iplist} )
knownarray=( ${knownlist} )


# Matching
unknowncount=0 # Var that will store how many unmatched mac addresses have been found
unknown=() # Unknown devices array

for i in "${!macarray[@]}"; do # Loop through macs
  notfound=0 # Reset notfound counter before each loop

  for j in "${!knownarray[@]}"; do # Loop through known addresses
    current="$(echo "${knownarray[j]}" | tr "," "\n")" # Current address
    arr=( ${current} ) # Transform current address into array where [0] = mac and [1] = name

    if [ "${arr[0]}" == "${macarray[i]}" ]; then # Match the strings together
      printf "${arr[1]}\n" # Print name
      printf 'MAC: '"${macarray[i]}"' IP: '"${iparray[i]}\n\n" # Print MAC and IP
    else
      (( notfound++ )) # Increase notfound counter
    fi

  done

  if [ "${notfound}" == "${#knownarray[@]}" ]; then # Notfound equal to known addresses (aka hasn't been matched)
    (( unknowncount++ )) # Increase counter for output
    unknown+=('ip: '"${iparray[i]}"' mac: '"${macarray[i]}") # Add data to output array
  fi
done

printf ""${unknowncount}" unknown devices are online.\n" # Output unknown count

for i in "${!unknown[@]}"; do # Loop through unknowns
  printf "${unknown[i]}\n" # Output each unknown
done
